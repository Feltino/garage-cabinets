{% comment %}
Refined tags
{% endcomment %}

{% if current_tags == blank %}
{% assign has_refined = false %}
{% else %}
{% assign has_refined = true %}
{% endif %}

{{ "zebra_pin.min.js" | asset_url | script_tag }}

<div class="continue-filter"><span>Filter</span><span class="close-sibade"></span></div>
<div class="sidebar-filter-wr ">

  <div class="filter-wr">


    <div class="filter-top-wr">
      <div class="addlabel sidebar-custom sidebar-tag ">
        <div class="filter-title-wr">
          <div class="title">{{ 'collection.sidebar.title_filter' | t }}</div>
        </div>
        <ul>  
          {% for t in current_tags %}
          {% assign tag = t  | downcase | strip %}

          {%- assign tag1 = t | strip | downcase -%}
          {%- assign checktag = '"' | append: tag1 | append: '"' -%}
          {% assign tag_value = checktag  | handleize %}
          <li>
            <span>{{tag}}</span> <a role="button" data-filter-tag="{{ tag }}"><i class="cs-font clever-icon-close-1"></i></a></li>
          {% endfor %}
        </ul>
        <a class="clear-all">{{ 'collection.sidebar.clear_filter' | t }}</a>
      </div>
    </div>
    <div class="sidebar-block">
      {% assign current_tags = current_tags  | downcase  %}
      {% for block in section.blocks %}
      {% assign shop_by_tags_1_title = block.settings.shop_by_tags_1_title %}
      {% assign enable_shop_by_tags_1 = block.settings.enable_shop_by_tags_1 %}
      {% assign enable_shop_by_tags_2 = block.settings.enable_shop_by_tags_2 %}
      {% assign shop_by_tags_2_title = block.settings.title %}
      {% assign shop_by_tags_2_list_tags = block.settings.shop_by_tags_2_list_tags %}
      {% assign enable_shop_by_tags_show_text = block.settings.enable_shop_by_tags_show_text %}
      {% assign enable_shop_by_tags_image = block.settings.enable_shop_by_tags_image %}
      {%- case block.type -%}
      {% when 'block_filter_categories' %}
      <div class="widget sidebar-links">
        <div class="title"><h3>
          <span>{{ block.settings.sidebar_categories_title }}</span>
          {% if block.settings.open_tabs %}
          <span class="novetty_caret"><i class="cs-font clever-icon-down" aria-hidden="true"></i></span>
          {% endif %}
          </h3></div>
        <div class="widget-content content">
          <ul>
            {% for category in collections %}
            <li>
              <a href="{{ category.url }}" {% if collection.handle == category.handle %} class="active" {% endif %}>
                {{ category.title }}
                <span class="count-sidebar">{{ collection.products_count }}</span>
              </a> 
            </li>     
            {% endfor %}
          </ul>
        </div>
      </div>
      {% when 'block_menu' %}
        <div class="widget sidebar-links mtg{{ forloop.index }}">
          <div class="title">
        <h3>{{ block.settings.m_tt }}
                {% if block.settings.open_tabs %}
          <span class="novetty_caret"><i class="cs-font clever-icon-down" aria-hidden="true"></i></span>
          {% endif %}</h3>
          </div>
          <nav class="widget-content content">
            <ul>
              {%- for link in block.settings.header_menu.links -%}
      
                    <li>
                      <a href="{{ link.url }}">{{ link.title }}</a>
                    </li>
              {% endfor %}
            </ul>
          </nav>
        </div>
      {% when 'block_filter_size' %}
      <div class="sidebar-custom sidebar-tag size {{ block.settings.style_filter}}">
        {% assign tags = shop_by_tags_2_list_tags | split: ',' %}
        <div class="title">
          <h3><span>{{ shop_by_tags_2_title }}</span>
            {% if block.settings.open_tabs %}
            <span class="novetty_caret"><i class="cs-font clever-icon-down" aria-hidden="true"></i></span>
            {% endif %}
          </h3>
        </div>
        <div class="content">
          <ul class="widget-content {{block.settings.style_filter}}" >
            {% for t in tags %}
            {%- assign tag = t  | strip -%}

            {% assign tag_value = tag | downcase | handleize %}

            {%- assign all_tags = collection.all_tags  -%}


            {%- assign tag1 = t | strip | downcase -%}
            {%- assign all_tags1 = collection.all_tags | downcase -%}
            {%- assign checktag = '"' | append: tag1 | append: '"' -%}
            {%- assign colors = ',' | append: settings.product_colors | strip_newlines | downcase | append: ',' -%}
            {%- assign _tag = tag | downcase | strip -%}
            {%- assign _tag = ',' | append: _tag | append: ':' -%}
            {%- capture curcol -%}{%- if colors contains _tag -%}{{ colors | split: _tag | last | split: ',' | first | strip }}{%- else -%}{%- endif -%}{%- endcapture -%}
            {% if block.settings.style_filter == 'color' %}
            {%- assign s = 'style="background:' | append: curcol | append: '"' -%}
            {% endif %}
            {% if current_tags contains checktag %}
            <li><input type="checkbox" value="{{ tag_value }}" checked/><label>
              <span>{{ tag }}</span>
              <div {{s}}></div>{%if block.settings.show_tooltips %}<span class="tooltip">{{ tag_value }}</span>{% endif %}</label></li>
            {% elsif all_tags1 contains tag1 %}
            <li><input type="checkbox" value="{{ tag_value }}"/><label>
              <span>{{ tag }}</span>
              <div {{s}}></div>
              {%if block.settings.show_tooltips %}<span class="tooltip">{{ tag }}</span>{% endif %}</label></li>
            {% endif %}
            {% endfor %}
          </ul>
        </div>
      </div>

      {% when 'block_filter_material' %}
      <div class="sidebar-custom sidebar-tag color">
        <div class="title">
          <h3><span>{{  block.settings.title }}</span>
            {% if block.settings.open_tabs %}
            <span class="novetty_caret"><i class="cs-font clever-icon-down" aria-hidden="true"></i></span>
            {% endif %}
          </h3>
        </div>
        <div class="content">
          <ul class="widget-content color" >

            {% for i in (1..10) %}   
            {% capture material_name %}material_name_{{ i }}{% endcapture %}
            {% assign material_name = settings[material_name] %} 

            {% assign material_name = material_name |strip %} 
            {% capture material_image %}material_{{ i }}{% endcapture %}
            {% assign material_image = settings[material_image] %} 
            {% if material_name != blank %}
            {% if current_tags contains material_name %}
            <li>
              {% assign tag_value = material_name | handleize %}
              <input type="checkbox" value="{{ tag_value }}" {% if current_tags contains material_name %}checked{% endif %}/>
              <a href="javascript:void(0)"  {% if current_tags contains material_name %} class="active" {% endif %} title="{{material_name}}">

                {{material_image | img_url: '160x160' | img_tag  }}

                <span class="tooltip">{{ tag_value }}</span>
              </a>
            </li>
            {% elsif collection.tags contains material_name %}
            <li>
              {% assign tag_value = material_name | handleize %}
              <input type="checkbox" value="{{ tag_value }}" />
              <a href="javascript:void(0)"   title="{{material_name}}">
                {{material_image | img_url: '160x160' | img_tag  }}
                <span class="tooltip">{{ material_name }}</span>
              </a>
            </li>
            {% endif %}
            {% endif %}
            {% endfor %}
          </ul>
        </div>
      </div>
      {% when 'block_promobox' %}
      <div class="sidebar-promobox">
        {{ block.settings.image | img_url: 'master' | img_tag  }}
        <div class="content-promobox">
          <h3>{{ block.settings.title }}</h3>
          <p>{{block.settings.custom_html }}</p>
          <a href="{{block.settings.url }}">{{block.settings.button_text }}</a>
        </div>
      </div>
      {% when 'block_customhtml' %}
      <div class="sidebar-customhtml sticky-sidebar-wrapper" id="sidebar">
        <div class="content-customhtml">
          <h3>{{ block.settings.title }}</h3>
          <p>{{block.settings.custom_html }}</p>
          <a href="{{block.settings.url }}">{{block.settings.button_text }}</a>
        </div>
      </div>
      {% when 'block_newsletter' %}
      <div class="block_newsletter">
        {% if block.settings.home_newsletter_title != blank %}
        <div class="title_newsletter">
          {{ block.settings.home_newsletter_title }}
        </div>
        {% endif %}
        {% if block.settings.home_newsletter_subtitle != blank %}
        <div class="subtitle_newsletter">
          {{ block.settings.home_newsletter_subtitle }}
        </div>
        {% endif %}
        <form action="{{ block.settings.mailing_list_form_action }}" method="post" name="mc-embedded-subscribe-form" target="_blank" class="input-group">
          <div class="input-group newsletter_form_content">
            <input  class="input__field input-group-field" type="email" value="" name="EMAIL" aria-label="Email Address" placeholder="{{ 'footer.footer_newsletter_content' | t }}">
            <span class="input-group-btn">
              <input type="submit" class="btn" value="{{ 'footer.footer_newsletter_go' | t }}" name="subscribe">

            </span>
          </div>
        </form>
      </div>
      {% when 'block_product' %}
      <div class="sidebar-product">
        {% if block.settings.tabs_title_block != blank %}
        <div class="heading-block">
          <h3 class="title">{{ block.settings.tabs_title_block }}</h3>
          {% if block.settings.subtitle %}
          <p class="subtitle">{{ block.settings.subtitle }}
          </p>
          {% endif %}
          <div class="products-grid-sidebar">
            {% assign tabnew_collection = block.settings.tabnew_collection %}
            {% assign collection =   collections[tabnew_collection] %}
            {% for product in collections[tabnew_collection].products limit:block.settings.products_limit %}
            <div class="product-sidebar-item">
              {% include 'product-item-new' %}
            </div>
            {% endfor %}
          </div>
        </div>
        {% endif %}	
      </div>

      {%- endcase -%}
      {% endfor %}

    </div>
  </div>

</div>
<style>
  .top {
    border-bottom: 1px solid #eee;
    display: block;
    margin-bottom: 33px;
}

.top a {
    background: #FFF;
    padding-right: 10px;
    position: relative;
    top: 8px;
}

.syntaxhighlighter {
    padding: .5em 0;
}

.sticky-navigation,
.sticky-navigation-highlight,
.sticky-navigation-callbacks,
.sticky-navigation-nocallbacks {
    background: #FFF;
    padding: 1em 0;
}

.sticky-navigation-highlight.Zebra_Pin,
.sticky-navigation-callbacks.Zebra_Pin,
.sticky-navigation-nocallbacks.Zebra_Pin {
    border-bottom: 1px solid #ccc;
    box-shadow: 0 12px 6px -6px rgba(0, 0, 0, .1);
    transition: box-shadow .25s linear;
}

.sticky-navigation-nocallbacks.Zebra_Pin li:nth-child(3) {
    display: none;
}

.sticky-navigation-callbacks li:nth-child(4),
.sticky-navigation-nocallbacks.Zebra_Pin li:nth-child(4) {
    background: #c09853;
}

.sticky-navigation-nocallbacks.Zebra_Pin li:nth-child(4) {
    display: block !important;
}

.sticky-navigation-callbacks li:nth-child(4) a,
.sticky-navigation-nocallbacks.Zebra_Pin li:nth-child(4) a {
    color: #FFF;
}
  .recently-viewed-products, #shopify-section-footer {
    z-index: 999999;
    position: relative;
    background-color: #fff;
}
  @media (max-width:1024px){
    .template-collection.colection-left .widget.sidebar-links.mtg2{
    margin-top: 70px;
}
  }
</style>
<script>
document.addEventListener('DOMContentLoaded', function() {
new $.Zebra_Pin($('.mtg2'), {
    //  class to add to the element when it is "sticky"
    class_name: 'Zebra_Pin',

    //  specifies whether the pinned element should be restrained to its parent element's boundaries or not.
    contain: false,

    //  specifies whether the element should be "hard" pinned (the element is pinned to its position from
    //  the beginning), or become pinned only when it is about to be hidden.
    //  default is FALSE
    hard: false,

    //  margin, in pixels, from the container element's (or the browser window's) top
    //  this only works if the "hard" property is set to FALSE.
    top_spacing: 10,

    //  margin, in pixels, from the container element's bottom
    //  this only works if the "hard" property is set to FALSE and it is used only if the "contain" property is TRUE
    bottom_spacing: 0,

    //  the value of zIndex CSS property to be set for pinned elements
    z_index: 9999,

    //  callback function to be executed when an element is pinned
    //  the callback function receives 3 arguments:
    //  -   the vertical position, relative to the document, where the event occurred
    //  -   a reference to the pinned element
    //  -   the index of the element - if the plugin was attached to multiple elements (0 based)
    onPin: null,

    //  callback function to be executed when an element is unpinned
    //  the callback function receives 3 arguments:
    //  -   the vertical position, relative to the document, where the event occurred
    //  -   a reference to the unpinned element
    //  -   the index of the element - if the plugin was attached to multiple elements (0 based)
    onUnpin: null
    
});
});





</script>